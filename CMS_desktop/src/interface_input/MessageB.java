
package interface_input;

import all_classes.javamail;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class MessageB extends javax.swing.JFrame {

        /**
         * Creates new form MessageB
         */
        int mY,mX;
        public MessageB() {
                initComponents();
                ImageIcon img=new ImageIcon("img\\cms.png");
                this.setIconImage(img.getImage());
                allc.setSelected(true);
                tb_update();
                        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                        to.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                        sub.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                        msg.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                        Reset.setCursor(new Cursor(Cursor.HAND_CURSOR));
                        submit.setCursor(new Cursor(Cursor.HAND_CURSOR));
                        
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                buttonGroup1 = new javax.swing.ButtonGroup();
                sub = new javax.swing.JTextField();
                jScrollPane3 = new javax.swing.JScrollPane();
                to = new javax.swing.JTextArea();
                jScrollPane1 = new javax.swing.JScrollPane();
                msg = new javax.swing.JTextArea();
                Reset = new javax.swing.JLabel();
                submit = new javax.swing.JLabel();
                exit = new javax.swing.JLabel();
                min = new javax.swing.JLabel();
                move = new javax.swing.JLabel();
                allu = new javax.swing.JCheckBox();
                dc = new javax.swing.JCheckBox();
                ac = new javax.swing.JCheckBox();
                allc = new javax.swing.JCheckBox();
                bg = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setUndecorated(true);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                sub.setBackground(new java.awt.Color(46, 46, 89));
                sub.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                sub.setForeground(new java.awt.Color(51, 255, 51));
                sub.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 390, 35));

                jScrollPane3.setBackground(new java.awt.Color(46, 46, 89));
                jScrollPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

                to.setBackground(new java.awt.Color(46, 46, 89));
                to.setColumns(20);
                to.setForeground(new java.awt.Color(51, 255, 0));
                to.setRows(5);
                to.setToolTipText("Example: admin@furkan.com , ........... , noreply@furkan.com");
                jScrollPane3.setViewportView(to);

                getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 95, 460, 100));

                jScrollPane1.setBackground(new java.awt.Color(46, 46, 89));
                jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

                msg.setBackground(new java.awt.Color(46, 46, 89));
                msg.setColumns(20);
                msg.setForeground(new java.awt.Color(51, 255, 0));
                msg.setRows(5);
                jScrollPane1.setViewportView(msg);

                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 305, 460, 200));

                Reset.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                ResetMouseClicked(evt);
                        }
                });
                getContentPane().add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 190, 50));

                submit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                submitMouseClicked(evt);
                        }
                });
                getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 520, 190, 50));

                exit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exitMouseClicked(evt);
                        }
                });
                getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 20, 27));

                min.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                minMouseClicked(evt);
                        }
                });
                getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 0, 20, 30));

                move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                                moveMouseDragged(evt);
                        }
                });
                move.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                moveMousePressed(evt);
                        }
                });
                getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 410, 20));

                buttonGroup1.add(allu);
                allu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                allu.setForeground(new java.awt.Color(0, 204, 0));
                allu.setText("All user");
                allu.setOpaque(false);
                allu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                alluActionPerformed(evt);
                        }
                });
                getContentPane().add(allu, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

                buttonGroup1.add(dc);
                dc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                dc.setForeground(new java.awt.Color(0, 204, 0));
                dc.setText("Deactive client");
                dc.setOpaque(false);
                dc.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                dcActionPerformed(evt);
                        }
                });
                getContentPane().add(dc, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

                buttonGroup1.add(ac);
                ac.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                ac.setForeground(new java.awt.Color(0, 204, 0));
                ac.setText("Active client");
                ac.setOpaque(false);
                ac.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                acActionPerformed(evt);
                        }
                });
                getContentPane().add(ac, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

                buttonGroup1.add(allc);
                allc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                allc.setForeground(new java.awt.Color(0, 204, 0));
                allc.setText("All client");
                allc.setOpaque(false);
                allc.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                allcActionPerformed(evt);
                        }
                });
                getContentPane().add(allc, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

                bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sendmailM.png"))); // NOI18N
                getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -5, 480, 580));

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

        private void submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseClicked
                String MSG=msg.getText();
                String SUB=sub.getText();
                String TO=to.getText();
                if(TO.trim().length()<=5){
                        JOptionPane.showMessageDialog(null, "Write valid Email!!!");
                }
                else if(SUB.equalsIgnoreCase("")){
                        JOptionPane.showMessageDialog(null, "Write valid Subject!!!");
                }
                else if(MSG.equalsIgnoreCase(""))
                {
                        JOptionPane.showMessageDialog(null, "Write valid Message!!!");
                }
                else{
                        this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                        to.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                        sub.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                        msg.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                        JOptionPane.showMessageDialog(null, "Press ok! and wait a moments for message send processing...!!!");
                        if(javamail.SendmailM(EMAIL,SUB,MSG)){
                                msg.setText("");
                                sub.setText("");
                                JOptionPane.showMessageDialog(null, "Message send successfully!!!");
                                
                        }
                        else{
                                JOptionPane.showMessageDialog(null, "Some technical problems to send email!");
                        }
                        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                        to.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                        sub.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                        msg.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                        Reset.setCursor(new Cursor(Cursor.HAND_CURSOR));
                        submit.setCursor(new Cursor(Cursor.HAND_CURSOR));
                }
        }//GEN-LAST:event_submitMouseClicked

        private void ResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetMouseClicked
         int n=JOptionPane.showConfirmDialog(this, "Are you sure Reset this from??");
         if(n==0)
         {
                msg.setText("");
                sub.setText("");
         }
        }//GEN-LAST:event_ResetMouseClicked

        private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
                // TODO add your handling code here:
                this.dispose();
        }//GEN-LAST:event_exitMouseClicked

        private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
                // TODO add your handling code here:
                this.setExtendedState(Bills_m.ICONIFIED);
        }//GEN-LAST:event_minMouseClicked

        private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
                // TODO add your handling code here:
                int x=evt.getXOnScreen();
                int y=evt.getYOnScreen();
                this.setLocation(x-mX, y-mY);
        }//GEN-LAST:event_moveMouseDragged

        private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
                // TODO add your handling code here:
                mX=evt.getX();
                mY=evt.getY();
        }//GEN-LAST:event_moveMousePressed

        private void alluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alluActionPerformed
                tb_update_user();
        }//GEN-LAST:event_alluActionPerformed

        private void allcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allcActionPerformed
                tb_update();
        }//GEN-LAST:event_allcActionPerformed

        private void dcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcActionPerformed
                tb_update();
        }//GEN-LAST:event_dcActionPerformed

        private void acActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acActionPerformed
               tb_update();
        }//GEN-LAST:event_acActionPerformed

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(MessageB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(MessageB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(MessageB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(MessageB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new MessageB().setVisible(true);
                        }
                });
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel Reset;
        private javax.swing.JCheckBox ac;
        private javax.swing.JCheckBox allc;
        private javax.swing.JCheckBox allu;
        private javax.swing.JLabel bg;
        private javax.swing.ButtonGroup buttonGroup1;
        private javax.swing.JCheckBox dc;
        private javax.swing.JLabel exit;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JLabel min;
        private javax.swing.JLabel move;
        private javax.swing.JTextArea msg;
        private javax.swing.JTextField sub;
        private javax.swing.JLabel submit;
        private javax.swing.JTextArea to;
        // End of variables declaration//GEN-END:variables

Connection con = null;
String NAME="",FNAME="",EMAIL="",MOBILE="",ADDRESS="",IP="",
        MAC="",DOB="",BANDWIDTH="",TYPE="",P_LOC="",CID="",STATUS;
    private void connection() {
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
        } catch (Exception ex) {
                System.out.print(ex);
        }
    }
    private void tb_update() {
            EMAIL="";

        try {
            connection();
            PreparedStatement st = null;
            String sql= "Select * from clientinfo" ;
            if(ac.isSelected()){
                   sql= "Select * from clientinfo where status='Active'"; 
            }else if(dc.isSelected()){
                    sql= "Select * from clientinfo where status='Deactive'";
            }else if(allu.isSelected()){
                    sql= "Select * from userinfo";
            }
            st = con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();
            while (res.next()) {
                    System.out.println(res.getString(5));
                EMAIL+= res.getString(5)+",\n";  
            }
        } catch (SQLException e) {
            System.out.print(e);
        }
        System.out.print(EMAIL+"onreply@futurenet.com");
        to.setText(EMAIL+"onreply@futurenet.com");
    }
    private void tb_update_user() {
            EMAIL="";

        try {
            connection();
            PreparedStatement st = null;
            String sql= "Select * from clientinfo" ;
            if(ac.isSelected()){
                   sql= "Select * from clientinfo where status='Active'"; 
            }else if(dc.isSelected()){
                    sql= "Select * from clientinfo where status='Deactive'";
            }else if(allu.isSelected()){
                    sql= "Select * from userinfo";
            }
            st = con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();
            while (res.next()) {
                EMAIL+= res.getString(3)+",\n";  
            }
        } catch (SQLException e) {
            System.out.print(e);
        }
        to.setText(EMAIL+"onreply@futurenet.com");
    }
}
