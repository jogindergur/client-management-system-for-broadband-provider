/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface_input;

import all_classes.FileReadWrite;
import interface_output.profile;
import java.awt.Cursor;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author user
 */
public class Bills_m extends javax.swing.JFrame {

    /**
     * Creates new form Bills_m
     */
    int mX,mY;
    public Bills_m() {
        initComponents();
        ImageIcon img=new ImageIcon("img\\cms.png");
        this.setIconImage(img.getImage());
        move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        reset.setCursor(new Cursor(Cursor.HAND_CURSOR));
        submit.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wdate = new com.toedter.calendar.JDateChooser();
        move = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        pdate = new com.toedter.calendar.JDateChooser();
        band = new javax.swing.JTextField();
        cid = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        Via = new javax.swing.JComboBox();
        reset = new javax.swing.JLabel();
        submit = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        wdate.setBackground(new java.awt.Color(46, 46, 89));
        wdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        wdate.setToolTipText("Select the date");
        wdate.setDateFormatString("yyyy-M-d");
        wdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(wdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 170, 30));

        move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                moveMouseDragged(evt);
            }
        });
        move.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                moveMousePressed(evt);
            }
        });
        getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 420, 20));

        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 21, 30));

        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 30, 27));

        pdate.setBackground(new java.awt.Color(46, 46, 89));
        pdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pdate.setToolTipText("Select the date");
        pdate.setDateFormatString("yyyy-M-d");
        pdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(pdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 230, 30));

        band.setBackground(new java.awt.Color(46, 46, 89));
        band.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        band.setForeground(new java.awt.Color(255, 255, 255));
        band.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(band, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 240, 35));

        cid.setBackground(new java.awt.Color(46, 46, 89));
        cid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cid.setForeground(new java.awt.Color(255, 255, 255));
        cid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(cid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 250, 35));

        amount.setBackground(new java.awt.Color(46, 46, 89));
        amount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        amount.setForeground(new java.awt.Color(255, 255, 255));
        amount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 250, 35));

        Via.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Via.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "bKash", "uCash", "DBL" }));
        getContentPane().add(Via, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 280, 30));

        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 130, 30));

        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitMouseClicked(evt);
            }
        });
        getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, 140, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/addbill.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 430));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-mX, y-mY);
    }//GEN-LAST:event_moveMouseDragged

    private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
        // TODO add your handling code here:
        mX=evt.getX();
        mY=evt.getY();
    }//GEN-LAST:event_moveMousePressed

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Bills_m.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_resetMouseClicked

    private void submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseClicked
    if(allValid())
        {
            try {
                profile_info();
                connection();
                String sql="insert into billshistory(cid,Wdate,Pdate,bandwidth,amount,via,type,status,rname,comment) values(?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement preparedStatement = con.prepareStatement(sql);
                preparedStatement.setString(1, Cid);
                preparedStatement.setString(2, Wdate);
                preparedStatement.setString(3, Pdate);
                preparedStatement.setString(4, BAND);
                preparedStatement.setString(5, Amount);    
                preparedStatement.setString(6, VIA);  
                preparedStatement.setString(7, "Bill"); 
                preparedStatement.setString(8, "Accepted");  
                preparedStatement.setString(9, RNAME); 
                preparedStatement.setString(10, "Thank you!"); 
                preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(null, "Added successfully!");
                reset();
            } catch (SQLException ex) {
                Logger.getLogger(Bills_m.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_submitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bills_m.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bills_m.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bills_m.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bills_m.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bills_m().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Via;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField band;
    private javax.swing.JTextField cid;
    private javax.swing.JLabel exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel min;
    private javax.swing.JLabel move;
    private com.toedter.calendar.JDateChooser pdate;
    private javax.swing.JLabel reset;
    private javax.swing.JLabel submit;
    private com.toedter.calendar.JDateChooser wdate;
    // End of variables declaration//GEN-END:variables
Connection con=null;
String Cid,Pdate,Wdate,VIA,Amount,BAND,RNAME;
private void connection()
    {
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
        }catch(Exception ex){
          
        }
    }
private void reset()
{
    cid.setText(null);
    band.setText(null);
    pdate.setDate(null);
    wdate.setDate(null);
    amount.setText(null);
    Via.setSelectedIndex(0);
    
}
 private boolean allValid() {
        Cid=cid.getText();
        BAND=band.getText();
        Amount=amount.getText();
        VIA=Via.getSelectedItem().toString();
        Pdate=((JTextField)pdate.getDateEditor().getUiComponent()).getText();
        Wdate=((JTextField)wdate.getDateEditor().getUiComponent()).getText();
        if(Cid.equalsIgnoreCase(""))
        {
            //alert.setText("* Client ID not valid");
            JOptionPane.showMessageDialog(null, "Enter valid Client ID !");
            return false;
        }
        else if(BAND.equalsIgnoreCase(""))
        {
            //alert.setText("* Email not Bandwidth !");
            JOptionPane.showMessageDialog(null, "Enter valid Bandwidth!");
            return false;
        }
        else if(Amount.equalsIgnoreCase(""))
        {
            //alert.setText("* Password not valid");
            JOptionPane.showMessageDialog(null, "Enter valid Amount!");
            return false;
        }
        else if(Pdate.equalsIgnoreCase(""))
        {
            //alert.setText("* Mobile not valid!");
            JOptionPane.showMessageDialog(null, "Enter valid Paying date!");
            return false;
        }
        else if(Wdate.equalsIgnoreCase(""))
        {
            //alert.setText("* Mobile not valid!");
            JOptionPane.showMessageDialog(null, "Enter valid which month's date!");
            return false;
        }
        else{
          //  alert.setText("");
            return true;
        }
    }
 private void profile_info()
{
    try {
            String sql="Select * from userinfo where Email='"+FileReadWrite.FileOutput("files//name")+"'";
           // JOptionPane.showMessageDialog(this, sql);
            PreparedStatement st=null;
            ResultSet rs=null;
            try {
                connection();
                st=con.prepareStatement(sql);
                rs=st.executeQuery();
               // JOptionPane.showMessageDialog(this, sql);
            if(rs.next())
            {
                RNAME=rs.getString(2);
            }
            } catch (SQLException ex) {
                Logger.getLogger(profile.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(profile.class.getName()).log(Level.SEVERE, null, ex);
        }
}
//tag ended
}
