/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Security;

import all_classes.FileReadWrite;
import java.awt.Cursor;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Furkan
 */
public class Seria_Key extends javax.swing.JFrame {

        /**
         * Creates new form ActivationD
         */
        int mX,mY;
        public Seria_Key() {
        initComponents();
        ImageIcon img=new ImageIcon("img\\cms.png");
        this.setIconImage(img.getImage());
        move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        ok.setCursor(new Cursor(Cursor.HAND_CURSOR));
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                move = new javax.swing.JLabel();
                min = new javax.swing.JLabel();
                exit = new javax.swing.JLabel();
                ok = new javax.swing.JLabel();
                first = new javax.swing.JTextField();
                second = new javax.swing.JTextField();
                third = new javax.swing.JTextField();
                fourth = new javax.swing.JTextField();
                bg = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setUndecorated(true);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                                moveMouseDragged(evt);
                        }
                });
                move.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                moveMousePressed(evt);
                        }
                });
                getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 410, 20));

                min.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                minMouseClicked(evt);
                        }
                });
                getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 20, 20));

                exit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exitMouseClicked(evt);
                        }
                });
                getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 20, 20));

                ok.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                okMouseClicked(evt);
                        }
                });
                getContentPane().add(ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 80, 50));

                first.setBackground(new java.awt.Color(151, 70, 40));
                first.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                first.setForeground(new java.awt.Color(255, 255, 255));
                first.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                first.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                firstKeyReleased(evt);
                        }
                });
                getContentPane().add(first, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 64, 55, 40));

                second.setBackground(new java.awt.Color(151, 70, 40));
                second.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                second.setForeground(new java.awt.Color(255, 255, 255));
                second.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                second.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                secondKeyReleased(evt);
                        }
                });
                getContentPane().add(second, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 64, 55, 40));

                third.setBackground(new java.awt.Color(151, 70, 40));
                third.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                third.setForeground(new java.awt.Color(255, 255, 255));
                third.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                third.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                thirdKeyReleased(evt);
                        }
                });
                getContentPane().add(third, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 64, 55, 40));

                fourth.setBackground(new java.awt.Color(151, 70, 40));
                fourth.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                fourth.setForeground(new java.awt.Color(255, 255, 255));
                fourth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                fourth.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                fourthKeyReleased(evt);
                        }
                });
                getContentPane().add(fourth, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 63, 55, 40));

                bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/serial_code.png"))); // NOI18N
                getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

        private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
                // TODO add your handling code here:
                int x=evt.getXOnScreen();
                int y=evt.getYOnScreen();
                this.setLocation(x-mX, y-mY);
        }//GEN-LAST:event_moveMouseDragged

        private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
                // TODO add your handling code here:
                mX=evt.getX();
                mY=evt.getY();
        }//GEN-LAST:event_moveMousePressed

        private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
                // TODO add your handling code here:
                this.setExtendedState(Seria_Key.ICONIFIED);
        }//GEN-LAST:event_minMouseClicked

        private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
                // TODO add your handling code here:
                System.exit(0);
        }//GEN-LAST:event_exitMouseClicked

        private void firstKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstKeyReleased
        if(first.getText().trim().length()>=3)
         {
                 first.setEditable(false);
                 second.requestFocus();
         }
        }//GEN-LAST:event_firstKeyReleased

        private void secondKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondKeyReleased
        if(second.getText().trim().length()>=3)
         {
                 second.setEditable(false);
                 third.requestFocus();
         }
        }//GEN-LAST:event_secondKeyReleased

        private void thirdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thirdKeyReleased
        if(third.getText().trim().length()>=3)
         {
                 third.setEditable(false);
                 fourth.requestFocus();
         }
        }//GEN-LAST:event_thirdKeyReleased

        private void fourthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fourthKeyReleased
        if(fourth.getText().trim().length()>=3)
         {
                 fourth.setEditable(false);
                 ok.requestFocus();
         }
        }//GEN-LAST:event_fourthKeyReleased

        private void okMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMouseClicked
        
               String addAll=first.getText()+second.getText()+third.getText()+fourth.getText();
               if(addAll.trim().length()==12)
               {
                                              int sum=firstB(first.getText())+secondB(second.getText())+
                               thirdB(third.getText())+fourthB(fourth.getText());
                       if(sum==4){
                               try {
                                       FileReadWrite.FileInput(yearback(), "files\\conf");
                               } catch (IOException ex) {
                                       Logger.getLogger(Seria_Key.class.getName()).log(Level.SEVERE, null, ex);
                               }
                               JOptionPane.showMessageDialog(null, "You're successfully register!!!\n"
                                       + "");
                               System.exit(0);
                       }
                       else{
                               JOptionPane.showMessageDialog(null, "Something wrong try again!!!");
                       }
                       
               }else{
                        JOptionPane.showMessageDialog(null, "Wrong key!!");
               }
                
                first.setEditable(true);
                second.setEditable(true);
                third.setEditable(true);
                fourth.setEditable(true);
                first.setText(null);
                second.setText(null);
                third.setText(null);
                fourth.setText(null);
        }//GEN-LAST:event_okMouseClicked

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(Seria_Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(Seria_Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(Seria_Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(Seria_Key.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new Seria_Key().setVisible(true);
                        }
                });
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel bg;
        private javax.swing.JLabel exit;
        private javax.swing.JTextField first;
        private javax.swing.JTextField fourth;
        private javax.swing.JLabel min;
        private javax.swing.JLabel move;
        private javax.swing.JLabel ok;
        private javax.swing.JTextField second;
        private javax.swing.JTextField third;
        // End of variables declaration//GEN-END:variables
private int firstB(String fa)
{
        Calendar cal=new GregorianCalendar();
        int y1=(cal.get(Calendar.YEAR)%2000)/10;
        int y2=(cal.get(Calendar.YEAR)%2000)%10;
        int flag1=0,flag2=0,flag3=0;
        String temp1=""+fa.charAt(0);
        String temp2=""+fa.charAt(1);
        String temp3=""+fa.charAt(2);
                if(temp1.equalsIgnoreCase(String.valueOf(y1)))
                {
                        flag1=1;
                }
                if(temp2.equalsIgnoreCase("F") || temp2.equalsIgnoreCase("U")|| temp2.equalsIgnoreCase("K"))
                {
                        flag2=1;
                }
                if(temp3.equalsIgnoreCase(""+y2))
                {
                        flag3=1;
                }
                if(flag1+flag2+flag3==3){
                        return 1;
                }
                else{
                        return 0;
                }
        
}
private int secondB(String fa)
{
    Calendar cal=new GregorianCalendar();
    int m=cal.get(Calendar.MONTH);
    String month;
    if(m<=9)
    {
            month="0"+m;
    }else{
            month=""+m;
    }
    int y1=(Integer.parseInt(month))/10;
    int y2=(Integer.parseInt(month))%10;
    int flag1=0,flag2=0,flag3=0;
        String temp1=""+fa.charAt(0);
        String temp2=""+fa.charAt(1);
        String temp3=""+fa.charAt(2);
                if(temp1.equalsIgnoreCase(String.valueOf(y1)))
                {
                        flag1=1;
                }
                if(temp2.equalsIgnoreCase("S") || temp2.equalsIgnoreCase("H")|| temp2.equalsIgnoreCase("I"))
                {
                        flag2=1;
                }
                if(temp3.equalsIgnoreCase(""+y2))
                {
                        flag3=1;
                }
                if(flag1+flag2+flag3==3){
                        return 1;
                }
                else{
                        return 0;
                }
        
}
private int thirdB(String fa)
{
Calendar cal=new GregorianCalendar();
    int d=cal.get(Calendar.DAY_OF_MONTH);
    String day;
    if(d<=9)
    {
            day="0"+d;
    }
    else
    {
            day=""+d;
    }
    int y1=(Integer.parseInt(day))/10;
    int y2=(Integer.parseInt(day))%10;
    int flag1=0,flag2=0,flag3=0;
        String temp1=""+fa.charAt(0);
        String temp2=""+fa.charAt(1);
        String temp3=""+fa.charAt(2);
                if(temp1.equalsIgnoreCase(String.valueOf(y1)))
                {
                        flag1=1;
                }
                if(temp2.equalsIgnoreCase("T") || temp2.equalsIgnoreCase("N")|| temp2.equalsIgnoreCase("D"))
                {
                        flag2=1;
                }
                if(temp3.equalsIgnoreCase(""+y2))
                {
                        flag3=1;
                }
                if(flag1+flag2+flag3==3){
                        return 1;
                }
                else{
                        return 0;
                }
    
        
}
private int fourthB(String fa)
{
        Calendar cal=new GregorianCalendar();
        int y1=cal.get(Calendar.YEAR)/1000;
        int y2=(cal.get(Calendar.YEAR)/100)%10;
        int flag1=0,flag2=0,flag3=0;
        String temp1=""+fa.charAt(0);
        String temp2=""+fa.charAt(1);
        String temp3=""+fa.charAt(2);
        //System.out.println(y1);
                if(temp1.equalsIgnoreCase(String.valueOf(y1)))
                {
                        flag1=1;
                }
                if(temp2.equalsIgnoreCase("R") || temp2.equalsIgnoreCase("J")|| temp2.equalsIgnoreCase("B"))
                {
                        flag2=1;
                }
                if(temp3.equalsIgnoreCase(""+y2))
                {
                        flag3=1;
                }
                if(flag1+flag2+flag3==3){
                        return 1;
                }
                else{
                        return 0;
                }
        
}
private String yearback()
{
    Calendar cal=new GregorianCalendar();
    int y=cal.get(Calendar.YEAR);
    return ""+y;
    
}
}
