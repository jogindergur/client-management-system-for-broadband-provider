/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Security;

import all_classes.FileReadWrite;
import interface_input.Login;
import java.awt.Cursor;
import java.io.FileNotFoundException;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Furkan
 */
public class ActivationD extends javax.swing.JFrame {

        /**
         * Creates new form ActivationD
         */
        int mX,mY;
        static int flag=0;
        public ActivationD() {
                initComponents();
                ImageIcon img=new ImageIcon("img\\cms.png");
                this.setIconImage(img.getImage());
                move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
                exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
                min.setCursor(new Cursor(Cursor.HAND_CURSOR));
                active.setCursor(new Cursor(Cursor.HAND_CURSOR));
                
                
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                move = new javax.swing.JLabel();
                min = new javax.swing.JLabel();
                exit = new javax.swing.JLabel();
                active = new javax.swing.JLabel();
                bg = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setUndecorated(true);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                                moveMouseDragged(evt);
                        }
                });
                move.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                moveMousePressed(evt);
                        }
                });
                getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 410, 20));

                min.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                minMouseClicked(evt);
                        }
                });
                getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 20, 20));

                exit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exitMouseClicked(evt);
                        }
                });
                getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 20, 20));

                active.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                activeMouseClicked(evt);
                        }
                });
                getContentPane().add(active, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 190, 40));

                bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ActiveD.png"))); // NOI18N
                getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

        private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
                // TODO add your handling code here:
                int x=evt.getXOnScreen();
                int y=evt.getYOnScreen();
                this.setLocation(x-mX, y-mY);
        }//GEN-LAST:event_moveMouseDragged

        private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
                // TODO add your handling code here:
                mX=evt.getX();
                mY=evt.getY();
        }//GEN-LAST:event_moveMousePressed

        private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
                // TODO add your handling code here:
                this.setExtendedState(ActivationD.ICONIFIED);
        }//GEN-LAST:event_minMouseClicked

        private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
                // TODO add your handling code here:
                System.exit(0);
        }//GEN-LAST:event_exitMouseClicked

        private void activeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_activeMouseClicked
        ActivationCode n=new ActivationCode();
        this.dispose();
        n.setVisible(true);
        }//GEN-LAST:event_activeMouseClicked

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) throws FileNotFoundException {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(ActivationD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(ActivationD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(ActivationD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(ActivationD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
        //</editor-fold>

                /* Create and display the form */
                String MAC=mac_find();
                String YEAR=yearback();
                String mac=FileReadWrite.FileOutput("files\\root");
                String year=FileReadWrite.FileOutput("files\\conf");
               // System.out.print(mac+"==="+MAC);
                if(mac.equals(MAC) && year.equals(YEAR)){
                        Login n=new Login();
                        n.setVisible(true);
                }else if(mac.equals(MAC)){
                        SerialD n=new SerialD();
                        n.setVisible(true);
                }else{
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new ActivationD().setVisible(true);
                        }
                });
                }

        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel active;
        private javax.swing.JLabel bg;
        private javax.swing.JLabel exit;
        private javax.swing.JLabel min;
        private javax.swing.JLabel move;
        // End of variables declaration//GEN-END:variables
static private String mac_find(){
            InetAddress ip;
    try {
        ip = InetAddress.getLocalHost();
        //System.out.println("Current IP address : " + ip.getHostAddress());
        NetworkInterface network = NetworkInterface.getByInetAddress(ip);
        byte[] mac = network.getHardwareAddress();
        //System.out.print("Current MAC address : ");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < mac.length; i++) {
            sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));        
        }
       // System.out.println(sb.toString());
        return sb.toString();
    } catch (UnknownHostException e) {
             return null;
    } catch (SocketException e){
             return null;
    }
               
}

static private String yearback()
{
    Calendar cal=new GregorianCalendar();
    int y=cal.get(Calendar.YEAR);
        //System.out.print(y);
    return ""+y;
    
}
}
