/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface_output;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    Connection conn = null;
    int mX, mY;
    DefaultTableModel model = new DefaultTableModel();

    public Admin() {
        initComponents();
        ImageIcon img=new ImageIcon("img\\cms.png");
        this.setIconImage(img.getImage());
        move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        delete.setCursor(new Cursor(Cursor.HAND_CURSOR));
        update.setCursor(new Cursor(Cursor.HAND_CURSOR));
        work2();
        tb_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                min = new javax.swing.JLabel();
                jScrollPane2 = new javax.swing.JScrollPane();
                table_user = new javax.swing.JTable();
                exit = new javax.swing.JLabel();
                move = new javax.swing.JLabel();
                search = new javax.swing.JTextField();
                status = new javax.swing.JComboBox();
                email = new javax.swing.JTextField();
                mob = new javax.swing.JTextField();
                name = new javax.swing.JTextField();
                update = new javax.swing.JLabel();
                delete = new javax.swing.JLabel();
                jLabel1 = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setUndecorated(true);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                min.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                minMouseClicked(evt);
                        }
                });
                getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 0, 20, 20));

                table_user.setBackground(new java.awt.Color(42, 66, 140));
                table_user.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Name", "Email", "Mobile", "Status"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                table_user.setGridColor(new java.awt.Color(204, 204, 255));
                table_user.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                table_userMouseClicked(evt);
                        }
                });
                table_user.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                table_userKeyReleased(evt);
                        }
                });
                jScrollPane2.setViewportView(table_user);

                getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 72, 305, 320));

                exit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exitMouseClicked(evt);
                        }
                });
                getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(627, 0, 20, 20));

                move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                                moveMouseDragged(evt);
                        }
                });
                move.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                moveMousePressed(evt);
                        }
                });
                getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 20));

                search.setBackground(new java.awt.Color(87, 68, 112));
                search.setToolTipText("Type name or email");
                search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                search.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                searchKeyReleased(evt);
                        }
                });
                getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 33, 270, 31));

                status.setBackground(new java.awt.Color(42, 66, 140));
                status.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pending", "Active", "Deactive" }));
                status.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 295, 180, 30));

                email.setEditable(false);
                email.setBackground(new java.awt.Color(42, 66, 140));
                email.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                email.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 180, 30));

                mob.setBackground(new java.awt.Color(42, 66, 140));
                mob.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                mob.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(mob, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 233, 180, 30));

                name.setBackground(new java.awt.Color(42, 66, 140));
                name.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                name.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 106, 180, 30));

                update.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                updateMouseClicked(evt);
                        }
                });
                getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 110, 40));

                delete.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                deleteMouseClicked(evt);
                        }
                });
                getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 100, 40));

                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/userView.png"))); // NOI18N
                getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 400));

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
        // TODO add your handling code here:
        mX = evt.getX();
        mY = evt.getY();
    }//GEN-LAST:event_moveMousePressed

    private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - mX, y - mY);
    }//GEN-LAST:event_moveMouseDragged

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Admin.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        String sql = "Update userinfo set Name='" + name.getText() + "', Mobile='" + mob.getText()
                + "', status='" + (status.getSelectedItem()).toString()
                + "' where Email='" + email.getText() + "'";
        //System.out.print(sql);
        try {

            conn = connection();
            Statement st = null;
            st = conn.createStatement();
            st.executeUpdate(sql);
            nill();
            work2();
            tb_update();
            JOptionPane.showConfirmDialog(this, "Information is successfuly updated.", "Confermation message", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, new ImageIcon("img//thik_mark.png"));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_updateMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        int conferm = JOptionPane.showConfirmDialog(this, "Are you sure Delete this Entry!");
        if (conferm == 0) {
            conn = connection();
            String sql = "DELETE from userinfo where Email= '" + email.getText() + "'";
            try {
                PreparedStatement st = null;
                st = conn.prepareStatement(sql);
                st.executeUpdate();
                nill();
                /* JOptionPane.showMessageDialog(null,"Network is connected...\n Press to go Recovery Password.",,new ImageIcon("thik_mark.png"));*/
                JOptionPane.showConfirmDialog(this, "Information is successfuly Deleted.", "Confermation message", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, new ImageIcon("del.jpg"));
                work2();
                tb_update();
            } catch (SQLException e) {

            }
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
        work2();
        search();
    }//GEN-LAST:event_searchKeyReleased

    private void table_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_userMouseClicked
        int row = table_user.getSelectedRow();
        name.setText(table_user.getModel().getValueAt(row, 0).toString());
        email.setText(table_user.getModel().getValueAt(row, 1).toString());
        mob.setText(table_user.getModel().getValueAt(row, 2).toString());
        String st = (table_user.getModel().getValueAt(row, 3).toString());
        if (st.equalsIgnoreCase("active")) {
            status.setSelectedIndex(1);
        } else {
            status.setSelectedIndex(0);
        }

    }//GEN-LAST:event_table_userMouseClicked

    private void table_userKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_userKeyReleased
        // TODO add your handling code here:
        int row = table_user.getSelectedRow();
        name.setText(table_user.getModel().getValueAt(row, 0).toString());
        email.setText(table_user.getModel().getValueAt(row, 1).toString());
        mob.setText(table_user.getModel().getValueAt(row, 2).toString());
        String st = (table_user.getModel().getValueAt(row, 3).toString());
        if (st.equalsIgnoreCase("active")) {
            status.setSelectedIndex(1);
        } else {
            status.setSelectedIndex(0);
        }
    }//GEN-LAST:event_table_userKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel delete;
        private javax.swing.JTextField email;
        private javax.swing.JLabel exit;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JLabel min;
        private javax.swing.JTextField mob;
        private javax.swing.JLabel move;
        private javax.swing.JTextField name;
        private javax.swing.JTextField search;
        private javax.swing.JComboBox status;
        private javax.swing.JTable table_user;
        private javax.swing.JLabel update;
        // End of variables declaration//GEN-END:variables

    private Connection connection() {
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
        } catch (Exception ex) {

        }
        return con;
    }

    private void tb_update() {

        try {
            conn = connection();
            model = (DefaultTableModel) table_user.getModel();
            PreparedStatement st = null;
            String sql = "Select * from userinfo";
            st = conn.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();
            while (res.next()) {
                String a[] = {res.getString(2), res.getString(3), res.getString(4), res.getString(6)};
                model.insertRow(model.getRowCount(), a);
                //System.out.print(a[0]);
            }
        } catch (SQLException e) {
            System.out.print(e);
        }
    }

    private void search() {
        if (search.getText().trim().length() != 0) {
            try {
                conn = connection();
                model = (DefaultTableModel) table_user.getModel();
                PreparedStatement st = null;
                String sql = "Select * from userinfo where Name LIKE '%" + search.getText() + "%' ";
                String sql2 = "Select * from userinfo where Email LIKE '%" + search.getText() + "%' ";
                st = conn.prepareStatement(sql);
                ResultSet res = null;
                res = st.executeQuery();
                while (res.next()) {
                    // JOptionPane.showMessageDialog(this, "work");
                    String a[] = {res.getString(2), res.getString(3), res.getString(4), res.getString(6)};
                    model.insertRow(model.getRowCount(), a);
                }
                st = null;
                st = conn.prepareStatement(sql2);
                res = null;
                res = st.executeQuery();
                while (res.next()) {
                    // JOptionPane.showMessageDialog(this, "work");
                    String a[] = {res.getString(2), res.getString(3), res.getString(4), res.getString(6)};
                    model.insertRow(model.getRowCount(), a);
                }

            } catch (SQLException e) {

            }
        } else if (search.getText().equalsIgnoreCase("")) {
            work2();
            tb_update();
        }
    }

    public void work2() {
        model.setRowCount(0);
    }

    private void nill() {
        name.setText(null);
        email.setText(null);
        mob.setText(null);
        status.setSelectedIndex(0);
    }

//end tag
}
