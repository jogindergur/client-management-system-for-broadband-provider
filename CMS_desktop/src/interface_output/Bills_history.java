/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface_output;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Bills_history extends javax.swing.JFrame {

    /**
     * Creates new form Bills_history
     */
    int mX,mY;
    DefaultTableModel model = new DefaultTableModel(); 
    public Bills_history() {
        initComponents();
        ImageIcon img=new ImageIcon("img\\cms.png");
        this.setIconImage(img.getImage());
        move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        print.setCursor(new Cursor(Cursor.HAND_CURSOR));
        printT.setCursor(new Cursor(Cursor.HAND_CURSOR));
        viewD.setCursor(new Cursor(Cursor.HAND_CURSOR));
        work2();
        tb_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        move = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        receiver = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        ref = new javax.swing.JTextField();
        search = new javax.swing.JTextField();
        wdate = new javax.swing.JTextField();
        band = new javax.swing.JTextField();
        cid = new javax.swing.JTextField();
        pdate = new javax.swing.JTextField();
        via = new javax.swing.JTextField();
        print = new javax.swing.JLabel();
        printT = new javax.swing.JLabel();
        viewD = new javax.swing.JLabel();
        CCID = new javax.swing.JCheckBox();
        CSL = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyBills = new javax.swing.JTable();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                moveMouseDragged(evt);
            }
        });
        move.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                moveMousePressed(evt);
            }
        });
        getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 635, 20));

        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 0, 30, 25));

        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 27, 25));

        receiver.setEditable(false);
        receiver.setBackground(new java.awt.Color(48, 48, 135));
        receiver.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        receiver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(receiver, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 417, 245, 30));

        amount.setEditable(false);
        amount.setBackground(new java.awt.Color(48, 48, 135));
        amount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        amount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 365, 245, 30));

        ref.setEditable(false);
        ref.setBackground(new java.awt.Color(48, 48, 135));
        ref.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ref.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(ref, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 315, 255, 30));

        search.setBackground(new java.awt.Color(55, 45, 147));
        search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search.setToolTipText("Search by client id or Trans. ID");
        search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 40, 210, 30));

        wdate.setEditable(false);
        wdate.setBackground(new java.awt.Color(48, 48, 135));
        wdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        wdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(wdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 164, 194, 30));

        band.setEditable(false);
        band.setBackground(new java.awt.Color(48, 48, 135));
        band.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        band.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(band, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 115, 218, 30));

        cid.setEditable(false);
        cid.setBackground(new java.awt.Color(48, 48, 135));
        cid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(cid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 65, 240, 30));

        pdate.setEditable(false);
        pdate.setBackground(new java.awt.Color(48, 48, 135));
        pdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(pdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 213, 240, 30));

        via.setEditable(false);
        via.setBackground(new java.awt.Color(48, 48, 135));
        via.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        via.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(via, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 263, 258, 30));

        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
        });
        getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 460, 200, 60));

        printT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printTMouseClicked(evt);
            }
        });
        getContentPane().add(printT, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, 100, 50));

        viewD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewDMouseClicked(evt);
            }
        });
        getContentPane().add(viewD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 150, 50));

        buttonGroup1.add(CCID);
        CCID.setText("Client ID");
        CCID.setOpaque(false);
        getContentPane().add(CCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, -1, -1));

        buttonGroup1.add(CSL);
        CSL.setText("Serial no.");
        CSL.setOpaque(false);
        getContentPane().add(CSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(50, 19, 80));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        historyBills.setBackground(new java.awt.Color(48, 48, 135));
        historyBills.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SL", "CID", "Which month", "Bandwidth", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        historyBills.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyBillsMouseClicked(evt);
            }
        });
        historyBills.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                historyBillsKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(historyBills);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 320, 420));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/historyBill_2.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 530));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-mX, y-mY);
    }//GEN-LAST:event_moveMouseDragged

    private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
        // TODO add your handling code here:
        mX=evt.getX();
        mY=evt.getY();
    }//GEN-LAST:event_moveMousePressed

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Bills_history.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void printTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printTMouseClicked
        // TODO add your handling code here:historyBills
        MessageFormat head=new MessageFormat(
            "**** History of Bills ****"
    );
     MessageFormat foot=new MessageFormat("Page{0, number,integer}");
     try{
         historyBills.print(JTable.PrintMode.NORMAL, head, foot);
     }catch(java.awt.print.PrinterException e)
     {
         JOptionPane.showMessageDialog(null, "Errors:"+e);
     }
    }//GEN-LAST:event_printTMouseClicked

    private void historyBillsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBillsMouseClicked
        // TODO add your handling code here:
        int row=historyBills.getSelectedRow();
        SERIALS=(historyBills.getModel().getValueAt(row, 0).toString());
        onclick(SERIALS);
    }//GEN-LAST:event_historyBillsMouseClicked

    private void historyBillsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_historyBillsKeyReleased
     int row=historyBills.getSelectedRow();
        SERIALS=(historyBills.getModel().getValueAt(row, 0).toString());
        onclick(SERIALS);
    }//GEN-LAST:event_historyBillsKeyReleased

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
     work2();
        search();
    }//GEN-LAST:event_searchKeyReleased

    private void viewDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDMouseClicked
        if(ref.getText().equalsIgnoreCase("N/A"))
        {
            JOptionPane.showMessageDialog(null, "Details not found!!");
        }else{
        ViewBillDetails dialog = new ViewBillDetails(new javax.swing.JFrame(), true,ref.getText());
        dialog.setVisible(true);
        }
    }//GEN-LAST:event_viewDMouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
    DetailsBills dialog = new DetailsBills(new javax.swing.JFrame(), true,
    cid.getText(),band.getText(),wdate.getText(),pdate.getText(),via.getText(),
    ref.getText(),amount.getText(),receiver.getText());
    dialog.setVisible(true);
//        MessageFormat head=new MessageFormat(
//            "**** Online Bills Details ****"
//    );

//     String a[]={"Client ID          ",cid.getText()};
//     String b[]={"Transition         ",band.getText()};
//     String c[]={"Which month's bill ",wdate.getText()};
//     String d[]={"Paying Date        ",pdate.getText()};
//     String g[]={"Via                ",via.getText()};
//     String e[]={"Reference          ",ref.getText()};
//     String f[]={"Amount             ",amount.getText()};
//     String h[]={"Receiver           ",receiver.getText()};
//     
//     model.insertRow(model.getRowCount(), a);
//     model.insertRow(model.getRowCount(), b);
//     model.insertRow(model.getRowCount(), c);
//     model.insertRow(model.getRowCount(), d);
//     model.insertRow(model.getRowCount(), g);
//     model.insertRow(model.getRowCount(), e);
//     model.insertRow(model.getRowCount(), f);
//     model.insertRow(model.getRowCount(), h);
//     MessageFormat foot=new MessageFormat("Powered By nullPointerException");  
//     try{
//         view.print(JTable.PrintMode.NORMAL, head, foot);
//         
//     }catch(java.awt.print.PrinterException ex)
//     {
//         JOptionPane.showMessageDialog(null, "Errors:"+ex);
//         
//     }
    }//GEN-LAST:event_printMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bills_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bills_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bills_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bills_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bills_history().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CCID;
    private javax.swing.JCheckBox CSL;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField band;
    private javax.swing.JLabel bg;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cid;
    private javax.swing.JLabel exit;
    private javax.swing.JTable historyBills;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel min;
    private javax.swing.JLabel move;
    private javax.swing.JTextField pdate;
    private javax.swing.JLabel print;
    private javax.swing.JLabel printT;
    private javax.swing.JTextField receiver;
    private javax.swing.JTextField ref;
    private javax.swing.JTextField search;
    private javax.swing.JTextField via;
    private javax.swing.JLabel viewD;
    private javax.swing.JTextField wdate;
    // End of variables declaration//GEN-END:variables
Connection con=null;
String Cid,Band,Wdate,Pdate,Ref,Amount,REC,Via,SERIALS,REF;
    private void connection()
    {
     try{
            Class.forName("com.mysql.jdbc.Driver");
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
        }catch(Exception ex){
          
        }
    }
 private void reset()
{
    //Cid,Band,Wdate,Pdate,Ref,Amount,REC,Via;
    cid.setText(null);
    band.setText(null);
    wdate.setText(null);
    ref.setText(null);
    pdate.setText(null);
    amount.setText(null);
    receiver.setText(null);
    via.setText(null);
    
}
 private void onclick(String ss){
 
            try {
                connection();        
                PreparedStatement st = null;
                String sql = "Select * from billshistory where sl='"+ss+"'";
                st= con.prepareStatement(sql);
                ResultSet res = null;
                res = st.executeQuery();       
                while(res.next()){
                   cid.setText(res.getString(1));
                   pdate.setText(res.getString(4));
                   wdate.setText(res.getString(3));
                   amount.setText(res.getString(6));
                   via.setText(res.getString(7));
                   band.setText(res.getString(5));
                   ref.setText(res.getString(10));
                   receiver.setText(res.getString(11));
                }
        }catch(SQLException e)
        {
           System.out.print(e);
        }
    }
private void tb_update(){
 
            try {
                connection();
                model = (DefaultTableModel) historyBills.getModel();   
                PreparedStatement st = null;
                String sql = "Select * from billshistory";
            st= con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();       
            while(res.next())
            {
                 String a[] = {res.getString(1), res.getString(2), res.getString(3),res.getString(5),res.getString(6)};              
                model.insertRow(model.getRowCount(), a);
                //System.out.print(a[0]);
            }
        }catch(SQLException e)
        {
           System.out.print(e);
        }
    }
private void search()
    {
        if(search.getText().trim().length()!=0){
            try {
                connection();
            model = (DefaultTableModel) historyBills.getModel();
            PreparedStatement st = null;
            String sql;
            if(CCID.isSelected()){
                sql= "Select * from billshistory where cid LIKE '%"+search.getText()+"%' "; 
            }
            else{
                sql="Select * from billshistory where sl LIKE '%"+search.getText()+"%' ";
            }
            st= con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();       
            while(res.next())
            {
                // JOptionPane.showMessageDialog(this, "work");
                String a[] = {res.getString(1), res.getString(2), res.getString(3),res.getString(5),res.getString(6)};              
                model.insertRow(model.getRowCount(), a);
            }
            
        }catch(SQLException e){
            
        }
        }
        else if(search.getText().equalsIgnoreCase(""))
        {
            work2();
            tb_update(); 
        }
}
private void work2()
    {
        model.setRowCount(0);
    }
 //end tag
}
