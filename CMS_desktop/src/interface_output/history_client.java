/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interface_output;

import all_classes.FileReadWrite;
import java.awt.Cursor;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Furkan
 */
public class history_client extends javax.swing.JFrame {

    /**
     * Creates new form history_client
     */
    Connection con=null;
    int mX,mY;
    String CID="";
    public history_client() {
        try {
            initComponents();
            move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        print.setCursor(new Cursor(Cursor.HAND_CURSOR));
        bandwidth1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        solutions.setCursor(new Cursor(Cursor.HAND_CURSOR));
        problems.setCursor(new Cursor(Cursor.HAND_CURSOR));
        bills.setCursor(new Cursor(Cursor.HAND_CURSOR));

            try {
                Class.forName("com.mysql.jdbc.Driver");
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
            } catch (Exception ex) {
                
            }
            CID=FileReadWrite.FileOutput("files\\CID");
                    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(history_client.class.getName()).log(Level.SEVERE, null, ex);

        }
        head.setText("Bills history of Client id # "+CID);
        String sql="select * from billshistory where cid='"+CID+"'";
    try{
        PreparedStatement st=null;
        ResultSet rs=null;
        st=con.prepareStatement(sql);
        rs=st.executeQuery();
        tb.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Errors : "+e);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                move = new javax.swing.JLabel();
                min = new javax.swing.JLabel();
                exit = new javax.swing.JLabel();
                head = new javax.swing.JLabel();
                bills = new javax.swing.JLabel();
                problems = new javax.swing.JLabel();
                solutions = new javax.swing.JLabel();
                bandwidth1 = new javax.swing.JLabel();
                print = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tb = new javax.swing.JTable();
                bg = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setUndecorated(true);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                                moveMouseDragged(evt);
                        }
                });
                move.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                moveMousePressed(evt);
                        }
                });
                getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 20));

                min.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                minMouseClicked(evt);
                        }
                });
                getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 0, 30, 30));

                exit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exitMouseClicked(evt);
                        }
                });
                getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(924, 0, 30, 30));

                head.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
                head.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                getContentPane().add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 830, 40));

                bills.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                billsMouseClicked(evt);
                        }
                });
                getContentPane().add(bills, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 120, 40));

                problems.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                problemsMouseClicked(evt);
                        }
                });
                getContentPane().add(problems, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 120, 40));

                solutions.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                solutionsMouseClicked(evt);
                        }
                });
                getContentPane().add(solutions, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 120, 40));

                bandwidth1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                bandwidth1MouseClicked(evt);
                        }
                });
                getContentPane().add(bandwidth1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 120, 40));

                print.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                printMouseClicked(evt);
                        }
                });
                getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 120, 40));

                tb.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tb.setToolTipText("Resize column for bettar print");
                jScrollPane1.setViewportView(tb);

                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 74, 690, 480));

                bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/history_1.png"))); // NOI18N
                getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void billsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billsMouseClicked
        head.setText("Bills history of Client id # "+CID);
        String sql="select * from billshistory where cid='"+CID+"'";
    try{
        PreparedStatement st=null;
        ResultSet rs=null;
        st=con.prepareStatement(sql);
        rs=st.executeQuery();
        tb.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Errors : "+e);
    }
    }//GEN-LAST:event_billsMouseClicked

    private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-mX, y-mY);
    }//GEN-LAST:event_moveMouseDragged

    private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
        // TODO add your handling code here:
        mX=evt.getX();
        mY=evt.getY();
    }//GEN-LAST:event_moveMousePressed

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Client_info.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        try{
            FileReadWrite.FileInput("0", "files\\CID");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Some technical problems occurs.\n"+e);
        }
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void bandwidth1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bandwidth1MouseClicked
     head.setText("Bandwidth history of Client id # "+CID);
        String sql="select * from bandwidthhistory where cid='"+CID+"'";
    try{
        PreparedStatement st=null;
        ResultSet rs=null;
        st=con.prepareStatement(sql);
        rs=st.executeQuery();
        tb.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Errors : "+e);
    }
    }//GEN-LAST:event_bandwidth1MouseClicked

    private void problemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_problemsMouseClicked
     head.setText("Problems history of Client id # "+CID);
        String sql="select * from problems where cid='"+CID+"'";
    try{
        PreparedStatement st=null;
        ResultSet rs=null;
        st=con.prepareStatement(sql);
        rs=st.executeQuery();
        tb.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Errors : "+e);
    }
    }//GEN-LAST:event_problemsMouseClicked

    private void solutionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_solutionsMouseClicked
    head.setText("Solutions history of Client id # "+CID);
        String sql="select * from solution where cid='"+CID+"'";
    try{
        PreparedStatement st=null;
        ResultSet rs=null;
        st=con.prepareStatement(sql);
        rs=st.executeQuery();
        tb.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Errors : "+e);
    }
    }//GEN-LAST:event_solutionsMouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
    MessageFormat head=new MessageFormat(
            "**** LIST of Client information****"
    );
     MessageFormat foot=new MessageFormat("Page{0, number,integer}");
     try{
         tb.print(JTable.PrintMode.NORMAL, head, foot);
     }catch(java.awt.print.PrinterException e)
     {
         JOptionPane.showMessageDialog(null, "Errors:"+e);
     }
    }//GEN-LAST:event_printMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(history_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(history_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(history_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(history_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new history_client().setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel bandwidth1;
        private javax.swing.JLabel bg;
        private javax.swing.JLabel bills;
        private javax.swing.JLabel exit;
        private javax.swing.JLabel head;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel min;
        private javax.swing.JLabel move;
        private javax.swing.JLabel print;
        private javax.swing.JLabel problems;
        private javax.swing.JLabel solutions;
        private javax.swing.JTable tb;
        // End of variables declaration//GEN-END:variables
}
