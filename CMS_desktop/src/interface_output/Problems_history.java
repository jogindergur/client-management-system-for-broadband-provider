/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface_output;

import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Problems_history extends javax.swing.JFrame {

    /**
     * Creates new form Problems_history
     */
    int mX,mY;
    public Problems_history() {
        initComponents();
        ImageIcon img=new ImageIcon("img\\cms.png");
        this.setIconImage(img.getImage());
        move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        print.setCursor(new Cursor(Cursor.HAND_CURSOR));
        work2();
        tb_update();
        CCID.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        move = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        CCID = new javax.swing.JCheckBox();
        PID = new javax.swing.JCheckBox();
        panel = new javax.swing.JPanel();
        solver = new javax.swing.JLabel();
        adate = new javax.swing.JLabel();
        sdate = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        pid = new javax.swing.JLabel();
        cid = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pmsg = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        smsg = new javax.swing.JTextArea();
        status = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        p_tb = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        print = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                moveMouseDragged(evt);
            }
        });
        move.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                moveMousePressed(evt);
            }
        });
        getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 880, 20));

        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(895, 0, 23, 25));

        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(924, 0, 30, 25));

        buttonGroup1.add(CCID);
        CCID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CCID.setText("By Client ID");
        CCID.setOpaque(false);
        getContentPane().add(CCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, -1, -1));

        buttonGroup1.add(PID);
        PID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PID.setText("By PID");
        PID.setOpaque(false);
        getContentPane().add(PID, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 100, -1, -1));

        panel.setOpaque(false);
        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        solver.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        solver.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(solver, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 150, 40));

        adate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        adate.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(adate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 150, 40));

        sdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sdate.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(sdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 150, 40));

        title.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        title.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 510, 40));

        pid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pid.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(pid, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 260, 40));

        cid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cid.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(cid, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 200, 40));

        jScrollPane2.setBackground(new java.awt.Color(37, 40, 89));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        pmsg.setBackground(new java.awt.Color(37, 40, 89));
        pmsg.setColumns(20);
        pmsg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pmsg.setForeground(new java.awt.Color(51, 255, 51));
        pmsg.setRows(5);
        jScrollPane2.setViewportView(pmsg);

        panel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 270, 190));

        jScrollPane1.setBackground(new java.awt.Color(37, 40, 89));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        smsg.setBackground(new java.awt.Color(37, 40, 89));
        smsg.setColumns(20);
        smsg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        smsg.setForeground(new java.awt.Color(51, 255, 51));
        smsg.setRows(5);
        smsg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(smsg);

        panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 270, 190));

        status.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        status.setForeground(new java.awt.Color(51, 255, 51));
        panel.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 150, 40));

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 610, 450));

        p_tb.setBackground(new java.awt.Color(54, 59, 103));
        p_tb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p_tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "CID", "Title", "Problems", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        p_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_tbMouseClicked(evt);
            }
        });
        p_tb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                p_tbKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(p_tb);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 130, 320, 430));

        search.setBackground(new java.awt.Color(122, 103, 129));
        search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search.setToolTipText("Search by PID or CID");
        search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 57, 300, 40));

        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
        });
        getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(465, 515, 144, 40));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/prob_h.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-mX, y-mY);
    }//GEN-LAST:event_moveMouseDragged

    private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
        // TODO add your handling code here:
        mX=evt.getX();
        mY=evt.getY();
    }//GEN-LAST:event_moveMousePressed

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Problems_history.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void p_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_tbMouseClicked
        onclick();
    }//GEN-LAST:event_p_tbMouseClicked

    private void p_tbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_tbKeyReleased
        onclick();
    }//GEN-LAST:event_p_tbKeyReleased

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        work2();
        search();
    }//GEN-LAST:event_searchKeyReleased

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
    if(cid.getText().equalsIgnoreCase("") || pid.getText().equalsIgnoreCase("")){
      JOptionPane.showMessageDialog(null, "Please select one entry!!!");
    }else{
    Solution_history dialog = new Solution_history(new javax.swing.JFrame(), true,
    cid.getText(),pid.getText(),title.getText(),pmsg.getText(),smsg.getText(),
    sdate.getText(),adate.getText(),status.getText(),solver.getText());
    dialog.setVisible(true);
    }
    }//GEN-LAST:event_printMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Problems_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Problems_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Problems_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Problems_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Problems_history().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CCID;
    private javax.swing.JCheckBox PID;
    private javax.swing.JLabel adate;
    private javax.swing.JLabel bg;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel cid;
    private javax.swing.JLabel exit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel min;
    private javax.swing.JLabel move;
    private javax.swing.JTable p_tb;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel pid;
    private javax.swing.JTextArea pmsg;
    private javax.swing.JLabel print;
    private javax.swing.JLabel sdate;
    private javax.swing.JTextField search;
    private javax.swing.JTextArea smsg;
    private javax.swing.JLabel solver;
    private javax.swing.JLabel status;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
DefaultTableModel model = new DefaultTableModel(); 
Connection con=null;
String ProblemsID="",RNAME,Adate,s_msg,Title,STatus,CID,PSID;
    private void connection()
    {
     try{
            Class.forName("com.mysql.jdbc.Driver");
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
        }catch(Exception ex){
          
        }
    }

 private void onclick(){
        int row=p_tb.getSelectedRow();
        ProblemsID=(p_tb.getModel().getValueAt(row, 0).toString());
        cid.setText(p_tb.getModel().getValueAt(row, 1).toString());
        pid.setText(ProblemsID);
        title.setText(p_tb.getModel().getValueAt(row, 2).toString());
        pmsg.setText(p_tb.getModel().getValueAt(row, 3).toString());
        sdate.setText(p_tb.getModel().getValueAt(row, 4).toString());
        status.setText(p_tb.getModel().getValueAt(row, 5).toString());
        sol_get(pid.getText());
        
    }
private void tb_update(){
 
            try {
                connection();
                model = (DefaultTableModel) p_tb.getModel();   
                PreparedStatement st = null;
                String sql = "Select * from problems where status='Solved'";
            st= con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();       
            while(res.next())
            {
                 String a[] = {res.getString(1),res.getString(2),
                 res.getString(3), res.getString(4),res.getString(5),res.getString(6)};              
                model.insertRow(model.getRowCount(), a);
            }
        }catch(SQLException e)
        {
           System.out.print(e);
        }
    }
private void search()
    {
        if(search.getText().trim().length()!=0){
            try {
                connection();
            model = (DefaultTableModel) p_tb.getModel();
            PreparedStatement st = null;
            String sql;
            if(CCID.isSelected()){
                sql= "Select * from problems where cid LIKE '%"+search.getText()+"%' and status='Solved'"; 
            }
            else{
                sql="Select * from problems where pid LIKE '%"+search.getText()+"%' and status='Solved'";
            }
            st= con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();       
            while(res.next())
            {
                String a[] = {res.getString(1),res.getString(2),
                 res.getString(3), res.getString(4),res.getString(5),res.getString(6)};              
                model.insertRow(model.getRowCount(), a);
            }
            
        }catch(SQLException e){
            
        }
        }
        else if(search.getText().equalsIgnoreCase(""))
        {
            work2();
            tb_update(); 
        }
}
private void work2()
    {
        model.setRowCount(0);
    }
private void sol_get(String ss)
    {
        try {
                connection();  
                PreparedStatement st = null;
                String sql = "Select * from solution where psid='"+ss+"' ";
                st= con.prepareStatement(sql);
                ResultSet res = null;
                res = st.executeQuery();       
                while(res.next())
                {
                    solver.setText(res.getString(4));
                    adate.setText(res.getString(5));
                    smsg.setText(res.getString(7));
                    
                }
             }catch(SQLException e){
                    System.out.print(e);
            }
    }

public void printJavaComponent() {
    PrinterJob job = PrinterJob.getPrinterJob();
    job.setJobName("Print Java Component");
 
    job.setPrintable (new Printable() {    
        public int print(Graphics g, PageFormat pageFormat, int pageIndex) {
            if (pageIndex > 0) {
                return(NO_SUCH_PAGE);
            } else {
                Graphics2D g2d = (Graphics2D)g;
                g2d.translate(pageFormat.getImageableX(), 
                pageFormat.getImageableY());
 
                panel.paint(g2d);
                
                return(PAGE_EXISTS); 
            }
        }
    });
         
    if (job.printDialog()) {
        try {
            job.print();
        } catch (PrinterException e) {
            System.err.println(e.getMessage()); 
        }
    }
}
//end tag
}
