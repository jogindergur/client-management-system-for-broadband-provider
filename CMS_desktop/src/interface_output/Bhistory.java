/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface_output;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Bhistory extends javax.swing.JFrame {

    /**
     * Creates new form Bhistory
     */
    DefaultTableModel model = new DefaultTableModel(); 
    int mX,mY;
    public Bhistory() {
        initComponents();
        ImageIcon img=new ImageIcon("img\\cms.png");
        this.setIconImage(img.getImage());
        move.setCursor(new Cursor(Cursor.MOVE_CURSOR));
        exit.setCursor(new Cursor(Cursor.HAND_CURSOR));
        min.setCursor(new Cursor(Cursor.HAND_CURSOR));
        print.setCursor(new Cursor(Cursor.HAND_CURSOR));
        printB.setCursor(new Cursor(Cursor.HAND_CURSOR));
        CCID.setSelected(true);
        work2();
        tb_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                buttonGroup1 = new javax.swing.ButtonGroup();
                move = new javax.swing.JLabel();
                min = new javax.swing.JLabel();
                exit = new javax.swing.JLabel();
                search = new javax.swing.JTextField();
                date = new javax.swing.JTextField();
                cid = new javax.swing.JTextField();
                type = new javax.swing.JTextField();
                solver = new javax.swing.JTextField();
                cband = new javax.swing.JTextField();
                pband = new javax.swing.JTextField();
                exit1 = new javax.swing.JLabel();
                printB = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                band_up = new javax.swing.JTable();
                print = new javax.swing.JLabel();
                CSL = new javax.swing.JCheckBox();
                CCID = new javax.swing.JCheckBox();
                bg = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setUndecorated(true);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                move.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                        public void mouseDragged(java.awt.event.MouseEvent evt) {
                                moveMouseDragged(evt);
                        }
                });
                move.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                moveMousePressed(evt);
                        }
                });
                getContentPane().add(move, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 635, 20));

                min.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                minMouseClicked(evt);
                        }
                });
                getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 0, 30, 25));

                exit.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exitMouseClicked(evt);
                        }
                });
                getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 27, 25));

                search.setBackground(new java.awt.Color(59, 62, 136));
                search.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                search.setForeground(new java.awt.Color(255, 255, 255));
                search.setToolTipText("search by client id or SL");
                search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                search.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                searchKeyReleased(evt);
                        }
                });
                getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 25, 210, 30));

                date.setBackground(new java.awt.Color(15, 15, 63));
                date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                date.setForeground(new java.awt.Color(102, 255, 51));
                date.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 275, 240, 30));

                cid.setBackground(new java.awt.Color(15, 15, 63));
                cid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                cid.setForeground(new java.awt.Color(102, 255, 51));
                cid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(cid, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 68, 240, 30));

                type.setBackground(new java.awt.Color(15, 15, 63));
                type.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                type.setForeground(new java.awt.Color(102, 255, 51));
                type.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 228, 175, 30));

                solver.setBackground(new java.awt.Color(15, 15, 63));
                solver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                solver.setForeground(new java.awt.Color(102, 255, 51));
                solver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(solver, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 330, 255, 30));

                cband.setBackground(new java.awt.Color(15, 15, 63));
                cband.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                cband.setForeground(new java.awt.Color(102, 255, 51));
                cband.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(cband, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 122, 190, 30));

                pband.setBackground(new java.awt.Color(15, 15, 63));
                pband.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                pband.setForeground(new java.awt.Color(102, 255, 51));
                pband.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                getContentPane().add(pband, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 172, 175, 30));

                exit1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                exit1MouseClicked(evt);
                        }
                });
                getContentPane().add(exit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 30, 27));

                printB.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                printBMouseClicked(evt);
                        }
                });
                getContentPane().add(printB, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 372, 200, 50));

                band_up.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Sl", "ClientID", "Proposed Bandwidth", "Current Bandwidth", "Type", "Date", "Done By"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                band_up.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                band_upMouseClicked(evt);
                        }
                });
                band_up.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                band_upKeyReleased(evt);
                        }
                });
                jScrollPane1.setViewportView(band_up);

                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 330, 350));

                print.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                printMouseClicked(evt);
                        }
                });
                getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 100, 50));

                buttonGroup1.add(CSL);
                CSL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                CSL.setText("By SL");
                CSL.setOpaque(false);
                getContentPane().add(CSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 54, -1, -1));

                buttonGroup1.add(CCID);
                CCID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                CCID.setText("By CID");
                CCID.setOpaque(false);
                getContentPane().add(CCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 55, -1, -1));

                bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/historyBandwidth.png"))); // NOI18N
                getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 430));

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void moveMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-mX, y-mY);
    }//GEN-LAST:event_moveMouseDragged

    private void moveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveMousePressed
        // TODO add your handling code here:
        mX=evt.getX();
        mY=evt.getY();
    }//GEN-LAST:event_moveMousePressed

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Bhistory.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void exit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit1MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exit1MouseClicked

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
    work2();
    search();
    }//GEN-LAST:event_searchKeyReleased

    private void band_upKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_band_upKeyReleased
        onclick();
    }//GEN-LAST:event_band_upKeyReleased

    private void band_upMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_band_upMouseClicked
    onclick();
    }//GEN-LAST:event_band_upMouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
    MessageFormat head=new MessageFormat(
            "**** History Bandwidth Update ****"
    );
     MessageFormat foot=new MessageFormat("Page{0, number,integer}");
     try{
         band_up.print(JTable.PrintMode.NORMAL, head, foot);
     }catch(java.awt.print.PrinterException e)
     {
         JOptionPane.showMessageDialog(null, "Errors:"+e);
     }
    }//GEN-LAST:event_printMouseClicked

    private void printBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printBMouseClicked
    DetailsBandwidthUpdate d=new DetailsBandwidthUpdate(new javax.swing.JFrame(), true,
    SL,cid.getText(),cband.getText(),pband.getText(),type.getText(),date.getText(),
    solver.getText());
    d.setVisible(true);
    }//GEN-LAST:event_printBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bhistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bhistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bhistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bhistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bhistory().setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JCheckBox CCID;
        private javax.swing.JCheckBox CSL;
        private javax.swing.JTable band_up;
        private javax.swing.JLabel bg;
        private javax.swing.ButtonGroup buttonGroup1;
        private javax.swing.JTextField cband;
        private javax.swing.JTextField cid;
        private javax.swing.JTextField date;
        private javax.swing.JLabel exit;
        private javax.swing.JLabel exit1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel min;
        private javax.swing.JLabel move;
        private javax.swing.JTextField pband;
        private javax.swing.JLabel print;
        private javax.swing.JLabel printB;
        private javax.swing.JTextField search;
        private javax.swing.JTextField solver;
        private javax.swing.JTextField type;
        // End of variables declaration//GEN-END:variables
Connection con=null;
String SL;
    private void connection()
    {
     try{
            Class.forName("com.mysql.jdbc.Driver");
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/cms", "root", "");
        }catch(Exception ex){
          
        }
    }
 private void reset()
{
    //Cid,Band,Wdate,Pdate,Ref,Amount,REC,Via;   
}
 private void onclick(){

                int row=band_up.getSelectedRow();     
                SL=(band_up.getModel().getValueAt(row, 0).toString());
                cid.setText(band_up.getModel().getValueAt(row, 1).toString());
                cband.setText(band_up.getModel().getValueAt(row, 2).toString());
                pband.setText(band_up.getModel().getValueAt(row, 3).toString());
                date.setText(band_up.getModel().getValueAt(row, 5).toString());
                solver.setText(band_up.getModel().getValueAt(row, 6).toString());
                type.setText(band_up.getModel().getValueAt(row, 4).toString());
    }
private void tb_update(){
 
            try {
                connection();
                model = (DefaultTableModel) band_up.getModel();   
                PreparedStatement st = null;
                String sql = "Select * from bandwidthhistory";
            st= con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();       
            while(res.next())
            {
                 String a[] = {res.getString(1), res.getString(2), res.getString(3),res.getString(4),
                     res.getString(5),res.getString(6),res.getString(7)};              
                model.insertRow(model.getRowCount(), a);
                //System.out.print(a[0]);
            }
        }catch(SQLException e)
        {
           System.out.print(e);
        }
    }
private void search()
    {
        if(search.getText().trim().length()!=0){
            try {
                connection();
            model = (DefaultTableModel) band_up.getModel();
            PreparedStatement st = null;
            String sql;
            if(CCID.isSelected()){
                sql= "Select * from bandwidthhistory where cid LIKE '%"+search.getText()+"%' "; 
            }
            else{
                sql="Select * from bandwidthhistory where sl LIKE '%"+search.getText()+"%' ";
            }
            st= con.prepareStatement(sql);
            ResultSet res = null;
            res = st.executeQuery();       
            while(res.next())
            {
                String a[] = {res.getString(1), res.getString(2), res.getString(3),res.getString(4),
                     res.getString(5),res.getString(6),res.getString(7)};              
                model.insertRow(model.getRowCount(), a);
            }
            
        }catch(SQLException e){
            
        }
        }
        else if(search.getText().equalsIgnoreCase(""))
        {
            work2();
            tb_update(); 
        }
}
private void work2()
    {
        model.setRowCount(0);
    }
 //end tag

}
